public class Pi {
    public static void main(String args[]) {
        // 初始化變數
        int next = 10000; // 控制打印 π 的次數，初始為 10,000
        double n = 0; // 用於累加計算 π 的值
        double i; // 用於迭代的計數器

        System.out.println("(a)"); // 輸出部分 (a) 的提示

        // 使用 for 迴圈從 1 迭代到 100,000
        for (i = 1; i <= 100000; i++) {
            // 根據 i 的奇偶性交替加減
            if (i % 2 == 1) { // 如果是奇數項
                n += 4.0 / (2 * i - 1); // 加上當前奇數項的值
            }
            if (i % 2 == 0) { // 如果是偶數項
                n -= 4.0 / (2 * i - 1); // 減去當前偶數項的值
            }

            // 每當達到 next 的值時，輸出當前的 π 值
            if (i == next) {
                System.out.println("When i=" + next + ", pi=" + n); // 打印當前 π 值
                next += 10000; // 更新下個打印的次數，增加 10,000
            }
        }

        // 重置 n 和 i，用於計算所需的最小 i
        n = 0; // 重新初始化 n 為 0
        i = 1; // 重新初始化計數器為 1

        System.out.println("\n(b)"); // 輸出部分 (b) 的提示

        // 使用 while 迴圈，直到 π 的值在給定範圍內
        while (n < 3.14159 || n > 3.14160) {
            // 根據 i 的奇偶性交替加減
            if (i % 2 == 1) { // 如果是奇數項
                n += 4.0 / (2 * i - 1); // 加上當前奇數項的值
            }
            if (i % 2 == 0) { // 如果是偶數項
                n -= 4.0 / (2 * i - 1); // 減去當前偶數項的值
            }
            i++; // 增加計數器，準備下個項
        }

        // 輸出達到所需精度時的最小 i 值
        System.out.println("When pi=3.14159... , the mini i = " + i); // 打印達到所需精度時的最小 i
    }
}
